<?php

/**
 * @file
 * Module file for odpl_user module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function odpl_user_theme() {
  return [
    'odpl_login_with' => [
      'variables' => ['social_networks' => NULL, 'destination' => NULL],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function odpl_user_preprocess_odpl_login_with(&$variables) {
  $request = \Drupal::request();
  $variables['current_path'] = $request->getPathInfo();
  $variables['destination'] = $request->get('destination', $variables['destination']);
  $variables['base_path'] = base_path();
  $variables['#cache'] = ['contexts' => ['url.query_args:destination']];
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function odpl_user_menu_local_tasks_alter(&$data, $route_name) {
  if (($route_name == 'user.login' || $route_name == 'user.register' || $route_name == 'user.pass') && isset($data['tabs'][0])) {
    foreach ($data['tabs'][0] as $key => $tab) {
      $data['tabs'][0][$key]['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function odpl_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == "user_login_form") {
    $form['name']['#title_display'] = 'invisible';
    $form['name']['#attributes']['placeholder'] = 'Username';
    unset($form['name']['#description']);
    $form['pass']['#title_display'] = 'invisible';
    $form['pass']['#attributes']['placeholder'] = 'Password';
    unset($form['pass']['#description']);
  }
  elseif ($form_id == "user_register_form") {
    foreach ($form as $key => $value) {
      if (strpos($key, 'field_') !== FALSE) {
        $form[$key]['widget'][0]['value']['#title_display'] = 'invisible';
        $form[$key]['widget'][0]['value']['#placeholder'] = $form[$key]['widget'][0]['value']['#title'];
      }
    }
    $form['account']['mail']['#title_display'] = 'invisible';
    $form['account']['mail']['#attributes']['placeholder'] = 'Email';
    unset($form['account']['mail']['#description']);

    $form['actions']['submit']['#value'] = t('Register');
  }
  elseif ($form_id == "user_pass") {
    $form['mail']['#prefix'] = "<p class='user-pass-text'>";
    $form['mail']['#suffix'] = "</p>";
    $form['mail']['#markup'] = "Enter the email address associated with your account, and we'll send 
    you a link to reset your password.";
    $form['mail']['#weight'] = '-1';
    $form['actions']['cancel'] = [
      '#type' => 'submit',
      '#weight' => 999,
      '#limit_validation_errors' => [],
      '#submit' => [
        'cancel_reset_form__submission',
      ] ,
      '#value' => t('CANCEL') ,
    ];
  }
  elseif ($form_id == 'user_form') {
    // Hide current password and new password field for a developer role.
    $roles = \Drupal::currentUser()->getRoles();
    if (in_array('developer', $roles)) {
      $form['account']['pass']['#access'] = FALSE;
      $form['account']['current_pass']['#access'] = FALSE;
    }
  }
}

/**
 * Submission of user reset password form.
 */
function cancel_reset_form__submission(&$form, FormStateInterface $form_state) {
  $form_state->setRedirect('user.login');
}

/**
 * Implememts hook_preprocess_page_title().
 */
function odpl_user_preprocess_page_title(&$variables) {
  $current_route = \Drupal::routeMatch()->getRouteName();

  switch ($current_route) {
    case 'user.login':
      $variables['title'] = t("Log In");
      break;

    case 'user.register':
      $variables['title'] = t("Register");
      break;

    case 'user.pass':
      $variables['title'] = t("Reset password");
      break;

    default:
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function odpl_user_user_insert(EntityInterface $user) {
  $existing_roles = $user->getRoles();
  // On registration set role as developer.
  // additional check to avoid setting setting developer role to other users.
  if (count($existing_roles) == 1 && in_array('authenticated', $existing_roles)) {
    $user->addRole('developer');
    $user->save();
  }
}

/**
 * Implements hook_user_login().
 */
function odpl_user_user_login($account) {
  $roles = $account->getRoles();
  if (in_array('developer', $roles)) {
    $url = '/';
    $current_request = \Drupal::service('request_stack')->getCurrentRequest();
    $current_request->query->set(
      'destination', $url
    );
  }
}

/**
 * Implements hook_form_alter() for form templates.
 */
function odpl_user_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add reset password link.
  $url_object = Url::fromRoute('user.pass');
  $form['password_reset_link'] = [
    '#type' => 'link',
    '#url' => $url_object,
    '#title' => new TranslatableMarkup('Forgot your password?'),
    '#attributes' => [
      'class' => 'user-reset-password-link',
    ],
  ];
}
