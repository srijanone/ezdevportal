<?php

/**
 * @file
 * Place your custom preprocessing code in this file.
 */

use Drupal\file\Entity\File;

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function ezdevportal_theme_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['#form_id'])) {
    $suggestions[] = 'form__' . $variables['element']['#form_id'];
  }
}

/**
 * Implements hook_preprocess_page() for form templates.
 */
function ezdevportal_theme_preprocess_page(&$variables) {
  global $base_url;
  $fid = theme_get_setting('background_image');
  if (!empty($fid[0])) {
    $file = File::load($fid[0]);
    $variables['background_image'] = $base_url . $file->createFileUrl();
  }
  // Add class based on node type
  $current_path = \Drupal::service('path.current')->getPath();
  $current_url = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $get_node_type = $node->getType();
  }
  $variables['page']['content']['add_class'] = 'container';
  if (str_contains($current_url, '/node/add/forum') || str_contains($current_url, '/node/add/issue') || str_contains($current_url, '/search') || str_contains($current_url, '/node') || str_contains($current_url, '/user')) {
    $variables['page']['content']['add_class'] = 'container';
  }
  elseif (str_contains($current_url, '/home') || str_contains($current_url, '/docs') || str_contains($current_url, '/products') || str_contains($current_url, '/all-blogs') || str_contains($current_url, '/forum') || str_contains($current_url, '/issue') || ($get_node_type == 'landing_page') || ($get_node_type == 'use_case') || str_contains($current_url, '/form')) {
    $variables['page']['content']['add_class'] = '';
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function ezdevportal_theme_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if (!is_null($node) && in_array($hook, ['layout', 'layout-builder'])) {
    $suggestions[] = $hook . "__" . $node->bundle() . "__" . $variables['theme_hook_original'];
  }

  $currentpath = \Drupal::service('path.current')->getpath();
  $array_currentpath = explode('/', $currentpath);
  $content_type = end($array_currentpath);
  $current_user = \Drupal::currentUser();

  if (in_array($hook, ['node_edit_form']) &&
  in_array($content_type, ['forum', 'issue']) &&
  in_array('developer', $current_user->getRoles())) {
    $suggestions[] = $hook . "__" . $content_type;
  }
}

/**
 * Implements hook_theme_suggestions_container_alter().
 */
function ezdevportal_theme_theme_suggestions_container_alter(array &$suggestions, array $variables) {
  $element = $variables['element'];
  // Special handling for form elements.
  if (isset($element['#array_parents'])) {
    $suggestions[] = 'container__has_parent';
  }
  else {
    $suggestions[] = 'container__no_parent';
  }
  if (isset($element['#type']) && $element['#type'] != 'container') {
    $suggestions[] = 'container__' . $element['#type'];
  }
  if (isset($element['#type']) && $element['#type'] == 'container' && isset($element['children']['#type'])) {
    $suggestions[] = 'container__' . $element['children']['#type'];
  }
}
